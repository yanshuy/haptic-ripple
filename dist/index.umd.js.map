{"version":3,"file":"index.umd.js","sources":["../src/haptic-ripple.ts"],"sourcesContent":["// haptic-ripple.ts\n\ninterface HapticRippleOptions {\n    color?: string;\n    size?: number;\n    duration?: number;\n    initialOpacity?: number;\n    scale?: number;\n}\n\nclass HapticRipple {\n    private static idCounter = 1;\n    private static commonStylesInjected = false;\n    private static readonly COMMON_STYLE_ID = \"haptic-ripple-common-styles\";\n\n    private options: Required<HapticRippleOptions>;\n    private styleElement: HTMLStyleElement | null = null;\n    private styleId: string;\n    private instances: Map<HTMLElement, boolean> = new Map();\n\n    constructor(options: HapticRippleOptions = {}) {\n        this.options = {\n            color: options.color || \"oklab(0.5 0 0)\",\n            size: options.size || 16,\n            duration: options.duration || 300,\n            initialOpacity: options.initialOpacity || 0.7,\n            scale: options.scale || 4,\n        };\n\n        // Generate a unique ID for the instance style\n        this.styleId = `haptic-ripple-${HapticRipple.idCounter++}`;\n\n        // Inject common styles if not already done\n        if (!HapticRipple.commonStylesInjected) {\n            this.injectCommonStyles();\n        }\n\n        // Inject instance-specific styles\n        this.injectInstanceStyles();\n    }\n\n    private injectCommonStyles(): void {\n        // Check if already exists\n        if (document.getElementById(HapticRipple.COMMON_STYLE_ID)) {\n            HapticRipple.commonStylesInjected = true;\n            return;\n        }\n\n        // Create common stylesheet with shared properties\n        const commonStyle = document.createElement(\"style\");\n        commonStyle.id = HapticRipple.COMMON_STYLE_ID;\n        commonStyle.textContent = `\n        .haptic-ripple-base {\n          border-radius: 100vw;\n          position: absolute;\n          aspect-ratio: 1;\n          pointer-events: none;\n          z-index: -1;\n          transform-origin: center;\n          will-change: transform, opacity;\n        }\n      `;\n        document.head.appendChild(commonStyle);\n        HapticRipple.commonStylesInjected = true;\n    }\n\n    private injectInstanceStyles(): void {\n        // Remove previous style if exists\n        if (this.styleElement) {\n            document.head.removeChild(this.styleElement);\n        }\n\n        // Create and inject instance-specific stylesheet\n        this.styleElement = document.createElement(\"style\");\n        this.styleElement.id = this.styleId;\n        this.styleElement.textContent = `\n        .haptic-ripple-${this.styleId} {\n          --haptic-color: ${this.options.color};\n          --haptic-size: ${this.options.size}px;\n          --haptic-initial-opacity: ${this.options.initialOpacity};\n          --haptic-duration: ${this.options.duration}ms;\n          --haptic-scale: ${this.options.scale};\n          \n          height: var(--haptic-size);\n          background-color: var(--haptic-color);\n        }\n      `;\n        document.head.appendChild(this.styleElement);\n    }\n\n    public create(element: HTMLElement, event: MouseEvent | TouchEvent): void {\n        // Prepare container for relative positioning if not already set\n        const computedStyle = window.getComputedStyle(element);\n        if (computedStyle.position === \"static\") {\n            element.style.position = \"relative\";\n        }\n\n        // Create ripple element\n        const haptic = document.createElement(\"div\");\n        haptic.className = `haptic-ripple-base haptic-ripple-${this.styleId}`;\n\n        // Get coordinates\n        let clientX: number, clientY: number;\n\n        if (\"touches\" in event) {\n            // Touch event\n            clientX = (event as TouchEvent).touches[0].clientX;\n            clientY = (event as TouchEvent).touches[0].clientY;\n        } else {\n            // Mouse event\n            clientX = (event as MouseEvent).clientX;\n            clientY = (event as MouseEvent).clientY;\n        }\n\n        // Position the ripple precisely at click position\n        const rect = element.getBoundingClientRect();\n        const offsetX = this.options.size / 2;\n\n        // Apply position immediately\n        Object.assign(haptic.style, {\n            left: `${clientX - rect.left - offsetX}px`,\n            top: `${clientY - rect.top - offsetX}px`,\n            opacity: `${this.options.initialOpacity}`,\n            transform: \"scale(1)\",\n        });\n\n        // Append to target element immediately in the current frame\n        element.appendChild(haptic);\n\n        // Force reflow to ensure immediate rendering\n        haptic.offsetWidth;\n\n        // Start animation in the next frame\n        requestAnimationFrame(() => this.animateRipple(haptic));\n    }\n\n    private animateRipple(haptic: HTMLElement): void {\n        let startTime: number | null = null;\n\n        const animate = (timestamp: number): void => {\n            if (!startTime) startTime = timestamp;\n            const progress = timestamp - startTime;\n            const computedStyle = getComputedStyle(haptic);\n            const duration = this.options.duration;\n            const scale = this.options.scale;\n            const initialOpacity = this.options.initialOpacity;\n\n            if (progress < duration) {\n                const fraction = progress / duration;\n                const currentScale = 1 + fraction * scale;\n\n                haptic.style.transform = `scale(${currentScale})`;\n                haptic.style.opacity = `${initialOpacity * (1 - fraction)}`;\n\n                requestAnimationFrame(animate);\n            } else {\n                haptic.remove();\n            }\n        };\n\n        requestAnimationFrame(animate);\n    }\n\n    public updateOptions(options: HapticRippleOptions): void {\n        this.options = { ...this.options, ...options };\n        this.injectInstanceStyles();\n    }\n\n    public enable(selector: string | HTMLElement | HTMLElement[]): void {\n        let elements: HTMLElement[];\n\n        if (typeof selector === \"string\") {\n            elements = Array.from(\n                document.querySelectorAll(selector)\n            ) as HTMLElement[];\n        } else if (selector instanceof HTMLElement) {\n            elements = [selector];\n        } else if (Array.isArray(selector)) {\n            elements = selector;\n        } else {\n            throw new Error(\n                \"Invalid selector: must be a CSS selector string, HTMLElement, or array of HTMLElements\"\n            );\n        }\n\n        elements.forEach((element) => {\n            // Skip if this element already has a ripple from this instance\n            if (this.instances.has(element)) {\n                return;\n            }\n\n            // Mark this element as having this ripple instance\n            this.instances.set(element, true);\n\n            // Use touchstart and mousedown for faster response\n            const handleMouseDown = (event: MouseEvent) => {\n                if (event.button === 0) {\n                    // Primary button only\n                    this.create(element, event);\n                }\n            };\n\n            const handleTouchStart = (event: TouchEvent) => {\n                this.create(element, event);\n            };\n\n            element.addEventListener(\"mousedown\", handleMouseDown);\n            element.addEventListener(\"touchstart\", handleTouchStart, {\n                passive: true,\n            });\n\n            // Store event handlers for potential cleanup\n            element._hapticRippleHandlers = element._hapticRippleHandlers || {};\n            element._hapticRippleHandlers[this.styleId] = {\n                mousedown: handleMouseDown,\n                touchstart: handleTouchStart,\n            };\n        });\n    }\n\n    public disable(selector: string | HTMLElement | HTMLElement[]): void {\n        let elements: HTMLElement[];\n\n        if (typeof selector === \"string\") {\n            elements = Array.from(\n                document.querySelectorAll(selector)\n            ) as HTMLElement[];\n        } else if (selector instanceof HTMLElement) {\n            elements = [selector];\n        } else if (Array.isArray(selector)) {\n            elements = selector;\n        } else {\n            throw new Error(\n                \"Invalid selector: must be a CSS selector string, HTMLElement, or array of HTMLElements\"\n            );\n        }\n\n        elements.forEach((element) => {\n            if (\n                !element._hapticRippleHandlers ||\n                !element._hapticRippleHandlers[this.styleId]\n            ) {\n                return;\n            }\n\n            const handlers = element._hapticRippleHandlers[this.styleId];\n\n            element.removeEventListener(\"mousedown\", handlers.mousedown);\n            element.removeEventListener(\"touchstart\", handlers.touchstart);\n\n            delete element._hapticRippleHandlers[this.styleId];\n            this.instances.delete(element);\n        });\n    }\n}\n\n// Add a property to HTMLElement for TypeScript\ndeclare global {\n    interface HTMLElement {\n        _hapticRippleHandlers?: {\n            [key: string]: {\n                mousedown: (event: MouseEvent) => void;\n                touchstart: (event: TouchEvent) => void;\n            };\n        };\n    }\n}\n\n// Simple function for quick usage\nfunction createHapticRipple(options?: HapticRippleOptions) {\n    const ripple = new HapticRipple(options);\n\n    return {\n        enable: (selector: string | HTMLElement | HTMLElement[]): void => {\n            ripple.enable(selector);\n        },\n\n        disable: (selector: string | HTMLElement | HTMLElement[]): void => {\n            ripple.disable(selector);\n        },\n\n        update: (newOptions: HapticRippleOptions): void => {\n            ripple.updateOptions(newOptions);\n        },\n    };\n}\n\nexport { HapticRipple, createHapticRipple, HapticRippleOptions };\n"],"names":[],"mappings":"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"}